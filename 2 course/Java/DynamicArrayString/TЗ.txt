Динамический массив строк

При работе со стандартным массивом нам нужно задать конечный размер при его создании. В дальнейшем этот размер нельзя изменить - только создать новый массив.
Также для вставки либо удаления значения из середины массива нужно написать код, сдвигающий последующие элементы (ну или просто создавать новый массив нужного вида...).

Хотелось бы иметь более удобную структуру данных, которая ведёт себя как обычный список элементов:
изначально элементов нет
можно добавлять элементы в конец списка
можно добавлять элементы в начало и середину списка
элементы последовательно нумеруются от 0 до n-1 и доступны по номеру
можно узнать текущее количество элементов n
можно удалить любой элемент - при этом последующие элементы сдвигаются так, чтобы закрыть свободное место.

Иными словами, хотелось бы иметь дело с динамическим массивом.

Реализуйте класс динамического массива строк StringArrayList:
конструктор без параметров - изначально элементов нет
при помощи метода add(String value) в конец добавляется новый элемент.
метод String get(int i) возвращает i-й элемент либо null, если такого элемента нет
метод getLength() возвращает текущее количество элементов
метод bool set(int i, String value) переписывает значение i-го элемента массива и возвращает true. Если в массиве нету i-го элемента, ничего не происходит и возвращается false (это признак ошибки - в последующих методах аналогично).
метод bool insert(int i, String value) вставляет элемент value на i-е место, при этом имеющиеся элементы (начиная с бывшего i-го) сдвигаются вправо.
метод bool remove(int i) удаляет i-й элемент массива, при этом последующие сдвигаются влево, чтобы закрыть дырку.


В main создайте объект класса StringArrayList и реализуйте меню, предоставляющее возможность свободно применять к нему описанные методы - при этом после каждого действия нужно выводить на экран содержимое массива.

При реализации надо использовать "обычные" массивы. По сути StringArrayList это просто удобный интерфейс работы со String[]. Нечто подобное было в С++ - там класс string является удобным способом работы с массивом символов char*.

Обратите внимание, что нет требования, чтобы спрятанный внутри String[] был в точности такого же размера, как и getLength(). Т.е. не надо пересоздавать массив при каждом добавлении или удалении элемента. Лучше сделать более производительное решение, которое изначально выделяет сколько-то места и пересоздаёт внутренний массив только тогда, когда это место кончится.



P.S. Естественно, принцип инкапсуляции и прочие подразумеваемые требования никто не отменял.
